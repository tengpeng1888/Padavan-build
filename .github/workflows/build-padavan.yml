name: Padavan-GS

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    strategy:
      matrix:
        model: [ "MZJISU", "PSG1218", "K1", "MT7620", "MT7628" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
          cpio git python3-docutils gettext automake autopoint texinfo build-essential help2man \
          pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget

      - name: Clone source code
        env:
          KERNEL: 3.4
        run: |
          if [ $KERNEL = "4.4" ] ; then
            git clone --depth=1 https://github.com/tengpeng1888/padavan-4.4.git /opt/rt-n56u
          else
            git clone --depth=1 https://github.com/tengpeng1888/rt-n56u.git /opt/rt-n56u
          fi
          cd /opt/rt-n56u/toolchain-mipsel
          sh dl_toolchain.sh
          mkdir -p /opt/images/

      - name: Build Firmware
        env:
          TNAME: ${{ matrix.model }}
          KERNEL: 3.4
        run: |
          cd /opt/rt-n56u/trunk
          if [ ! -f configs/templates/$TNAME.config ] ; then
            echo "configs/templates/$TNAME.config not found "
            exit 1
          fi
          cp -f configs/templates/$TNAME.config .config
          sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
          sudo ./clear_tree
          sudo ./build_firmware_modify $TNAME 0
          sudo mv -f images/*.trx /opt/images/

      - name: Create output directory and copy files
        run: |
          OUTPUT_DIR="/opt/firmware-output/${{ matrix.model }}"
          mkdir -p $OUTPUT_DIR
          cp /opt/images/*.trx $OUTPUT_DIR/

      - name: Package firmware files
        id: package
        run: |
          OUTPUT_DIR="/opt/firmware-output/${{ matrix.model }}"
          ZIP_NAME="padavan-firmware-${{ matrix.model }}-$(date +%Y%m%d%H%M%S).zip"
          cd $OUTPUT_DIR
          zip -r $ZIP_NAME ./*
          echo "ZIP_PATH=$OUTPUT_DIR/$ZIP_NAME" >> $GITHUB_OUTPUT
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_OUTPUT

      - name: Upload packages
        if: success()  # 仅在编译成功时上传
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.ZIP_NAME }}
          path: ${{ steps.package.outputs.ZIP_PATH }}
